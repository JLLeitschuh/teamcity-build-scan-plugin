import java.text.SimpleDateFormat

plugins {
    id 'com.gradle.build-scan' version '2.4.2'
    id 'java'
    id 'groovy'
    id 'com.github.rodm.teamcity-server' version '1.2.2' // see https://github.com/rodm/gradle-teamcity-plugin
    id 'com.github.rodm.teamcity-environments' version '1.2.2'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

ext {
    CI = System.getenv().containsKey('CI') || project.properties.containsKey('CI')
    RELEASE = project.properties.containsKey('RELEASE')
    baseVersion = '0.9'
    buildTime = new Date()
}

def buildTimestamp = CI ? timestamp(buildTime) : 'prerelease'
def snapshotVersion = RELEASE ? '' : buildTimestamp

group = 'nu.studer'
version = baseVersion + (snapshotVersion ? "-$snapshotVersion" : '')

dependencies {
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'com.google.guava:guava:28.1-jre'

    agent project(path: ':agent', configuration: 'plugin')

    testCompile 'org.spockframework:spock-core:1.3-groovy-2.5'
}

teamcity {
    version = '2019.1' // TeamCity API version

    server {
        descriptor {
            name = 'GradleBuildScanIntegration'
            displayName = 'Gradle Build Scan Integration'
            description = 'Provides easy navigation from TeamCity builds to Gradle build scans'
            version = project.version
            vendorName = 'Etienne Studer'
            vendorUrl = 'https://github.com/etiennestuder'

            // optional properties
            email = 'etienne@studer.nu'
            downloadUrl = 'https://github.com/etiennestuder/teamcity-build-scan-plugin'
            useSeparateClassloader = true
        }
    }

    environments {
        downloadsDir = mkdir('.teamcity/dists')
        baseHomeDir = mkdir('.teamcity/servers')
        baseDataDir = mkdir('.teamcity/data')

        teamcity2019_1 {
            version = "2019.1.3"
            serverOptions '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
            agentOptions '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006'
        }
    }
}

task sources(type: Jar) {
    from sourceSets.main.allJava
}

publishing.publications {
    PluginPublication(MavenPublication) {
        artifact serverPlugin
        artifact sources {
            classifier 'sources'
        }
    }
}

bintray {
    user = findProperty('bintrayUser')
    key = findProperty('bintrayKey')
    publications = ['PluginPublication']

    dryRun = true
    publish = true
    override = false

    pkg {
        repo = 'teamcity-plugins'
        name = 'teamcity-build-scan-plugin'

        version {
            name = project.version
            released = project.buildTime
            vcsTag = project.version
        }
    }
}

tasks.build.dependsOn sources

static timestamp(Date date) {
    def timestampFormat = new SimpleDateFormat('yyyyMMddHHmmss')
    timestampFormat.timeZone = TimeZone.getTimeZone('UTC')
    timestampFormat.format(date)
}
